<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx" 
             xmlns:p="http://www.springframework.org/schema/p" 
             xmlns:batch="http://www.springframework.org/schema/batch"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/batch 
        http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
    

    <batch:job id="vendExtractorJob">   
        <batch:description>
            This job is responsible for launching the extraction for Vend stores.
        </batch:description>
        <batch:step id="vendExtractionMaster">
            <batch:partition step="vendExtractionSlave" partitioner="vendTaskPartitioner">
                <batch:handler grid-size="5" task-executor="taskExecutor" />
            </batch:partition>
        </batch:step>
    </batch:job>
    
    <batch:step id="vendExtractionSlave">
             <batch:tasklet transaction-manager="transactionManager" >
                    <batch:chunk reader="vendExtractorLauncherReader" 
                                 processor="vendExtractorLauncherProcessor"
                                 writer="extractorLauncherWriter"                              
                                 commit-interval="1"/>
            </batch:tasklet>
            <batch:listeners>
                 <batch:listener ref="stepLoggingListener"/>
            </batch:listeners>
    </batch:step>
     
    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
    
    <bean id="vendTaskPartitioner" class="com.sonrisa.swarm.job.partitioner.SimpleExtractorJobPartitioner" >
       <property name="apiName" value="${api.name.vend}"/>
       <property name="queryString" value="SELECT store_id FROM stores WHERE api_id = ? AND active='1' ORDER BY store_id ASC"/>
    </bean>
        
     <!-- Reader, writer, processor -->
    <bean id="vendExtractorLauncherReader" class="com.sonrisa.swarm.job.ExtractorLauncherReader" scope="step">
        <property name="fromId" value="#{stepExecutionContext[fromId]}" />
        <property name="toId" value="#{stepExecutionContext[toId]}" />
        <property name="apiName" value="${api.name.vend}"/>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="queryString" value="select object(t) from StoreEntity t where t.apiId = :apiId and t.active = true and t.id &gt;= :fromId and t.id &lt;= :toId"/>
        <property name="pageSize" value="1"/> <!-- pageSize=1 because we want to commit after every store -->
    </bean>    
    <bean id="vendExtractorLauncherProcessor" class="com.sonrisa.swarm.vend.job.VendExtractorLauncher" />
    <bean id="extractorLauncherWriter" class="com.sonrisa.swarm.job.ExtractorLauncherWriter"/>
</beans>
