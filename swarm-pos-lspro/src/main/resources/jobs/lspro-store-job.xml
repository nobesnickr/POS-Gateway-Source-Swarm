<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2013 Sonrisa Informatikai Kft. All Rights Reserved.

This software is the confidential and proprietary information of
Sonrisa Informatikai Kft. ("Confidential Information").
You shall not disclose such Confidential Information and shall use it only in
accordance with the terms of the license agreement you entered into
with Sonrisa.

   SONRISA MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
   THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
   TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
   PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SONRISA SHALL NOT BE LIABLE FOR
   ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
   DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
  -->
<beans xmlns="http://www.springframework.org/schema/beans" 
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx" 
             xmlns:p="http://www.springframework.org/schema/p" 
             xmlns:batch="http://www.springframework.org/schema/batch"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/batch 
        http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
        
    <!-- 
     This XML is the exact copy of kounta-store-job.xml with the exception that all "kounta" was replaced with "lsPro".
     -->

    <batch:job id="lsProStoreJob">   
        <batch:description>
            This job is responsible for launching the store job for Lightspeed Pro stores.
        </batch:description>
        <batch:step id="lsProStoreJobMaster">
            <batch:partition step="lsProStoreJobSlave" partitioner="lsProStoreJobTaskPartitioner">
                <batch:handler grid-size="5" task-executor="taskExecutor" />
            </batch:partition>
        </batch:step>
    </batch:job>
    
    <batch:step id="lsProStoreJobSlave">
             <batch:tasklet transaction-manager="transactionManager" >
                    <batch:chunk reader="lsProStoreJobReader" 
                                 processor="lsProStoreJobProcessor"
                                 writer="storeJobWriter"                              
                                 commit-interval="1"/>
            </batch:tasklet>
            <batch:listeners>
                 <batch:listener ref="stepLoggingListener"/>
            </batch:listeners>
    </batch:step>
     
    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
    
    <bean id="lsProStoreJobTaskPartitioner" class="com.sonrisa.swarm.job.partitioner.SimpleExtractorJobPartitioner" >
       <property name="apiName" value="${api.name.lspro}"/>
       <property name="queryString" value="SELECT MAX(store_id) FROM stores WHERE api_id = ? and active = 1 GROUP BY username ORDER BY MAX(store_id) ASC"/>
    </bean>
        
     <!-- Reader, writer, processor -->
    <bean id="lsProStoreJobReader" class="com.sonrisa.swarm.job.StoreJobReader" scope="step">
        <property name="idList" value="#{stepExecutionContext[idList]}" />
        <property name="apiName" value="${api.name.lspro}"/>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property 
        	name="queryString" 
        	value="select object(t) from StoreEntity t where t.apiId = :apiId and t.id IN :idList GROUP BY t.username"/>
        <property name="pageSize" value="1"/> <!-- pageSize=1 because we want to commit after every store -->
    </bean>    
    <bean id="lsProStoreJobProcessor" class="com.sonrisa.swarm.job.StoreJobProcessor" >
    	<constructor-arg ref="lsProStoreFactory" />
    	<constructor-arg ref="lsProStoreServiceImpl" />
    	<constructor-arg value="com.sonrisa.swarm.lspro.LsProAccount" />
    </bean>
    
    <bean id="storeJobWriter" class="com.sonrisa.swarm.job.StoreJobWriter">
    	<property name="noUpdate" value="true" />
    </bean>
</beans>
