<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sonrisa.swarm</groupId>
    <artifactId>swarm-parent</artifactId>
    <version>12.01.15</version>
    <packaging>pom</packaging>

    <name>Swarm</name>

    <modules>
        <module>swarm-config</module>
        <module>swarm-common</module>
        <module>swarm-model</module>        
        <module>swarm-test-common</module>
        <module>swarm-legacy</module>
        <module>swarm-staging</module>
        <module>swarm-pos-integration</module>         
        <module>swarm-pos-retailpro</module>
        <module>swarm-pos-mos</module>
        <module>swarm-pos-erply</module>
        <module>swarm-pos-revel</module>        
        <module>swarm-pos-lspro</module>
        <module>swarm-pos-kounta</module>
        <module>swarm-pos-vend</module>
        <module>swarm-pos-shopify</module>  
        <module>swarm-pos-rics</module>    
        <module>swarm-admin</module>         
        <module>swarm-gateway</module>
    </modules>

    <distributionManagement>

    </distributionManagement>
	<scm>
		<connection>scm:git:ssh://gerrit.sonrisa:29418/swarm-mobile</connection>
		<developerConnection>scm:git:ssh://gerrit.sonrisa:29418/swarm-mobile</developerConnection>
		<tag>v14.09.15-2</tag>
	</scm>

    <properties>
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <spring.version>4.1.0.RELEASE</spring.version>
        <spring.batch.version>3.0.1.RELEASE</spring.batch.version>
        <spring.security.version>3.2.5.RELEASE</spring.security.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j.version>1.7.7</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <mysql.version>5.1.32</mysql.version>
        <newrelic.version>3.12.1</newrelic.version>
        <h2.version>1.3.173</h2.version>
        <liquibase.version>3.2.2</liquibase.version>
		<!-- Sonar -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<!-- The destination file for the code coverage report has to be set to 
			the same value in the parent pom and in each module pom. Then JaCoCo will 
			add up information in the same report, so that, it will give the cross-module 
			code coverage. -->
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
    </properties>

    <repositories>
        <!-- Repository for this dependecy: "org.springframework:spring-test-mvc:jar:1.0.0.M2" -->
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>springsource.libs.milestone</id>
            <url>http://repo.springsource.org/libs-milestone/</url>
        </repository>
    </repositories>

 <dependencyManagement>
    <dependencies>
        <!-- Modules -->
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-config</artifactId>
            <version>${project.version}</version>
        </dependency>        
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-test-common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-legacy</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-staging</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-integration</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-retailpro</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-mos</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>  
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-erply</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-shopify</artifactId>
            <version>${project.version}</version>
        </dependency>	
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-revel</artifactId>
            <version>${project.version}</version>
        </dependency>	
		 <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-lspro</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-rics</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-kounta</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-pos-vend</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-admin</artifactId>
            <version>${project.version}</version>
        </dependency>	
        <dependency>
            <groupId>com.sonrisa.swarm</groupId>
            <artifactId>swarm-gateway</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version> 
			<scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

		<!-- New Relic -->
		<dependency>
		  <groupId>com.newrelic.agent.java</groupId>
		  <artifactId>newrelic-agent</artifactId>
		  <version>${newrelic.version}</version>
		  <scope>provided</scope>
		</dependency>
		<dependency>
		  <groupId>com.newrelic.agent.java</groupId>
		  <artifactId>newrelic-api</artifactId>
		  <version>${newrelic.version}</version>
		  <scope>compile</scope>
		</dependency>

        <!-- Mock and test data source -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.8</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.8</version>
        </dependency>
	
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
		  <groupId>log4j</groupId>
		  <artifactId>apache-log4j-extras</artifactId>
            <version>${log4j.version}</version>
		</dependency>

        <!-- Spring MVC framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>

        <!-- Spring batch -->
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-core</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-infrastructure</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-test</artifactId>
            <version>${spring.batch.version}</version>
        </dependency>        
        
        <!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.2.2</version>
        </dependency>
        
        <!-- Dozer bean mapper -->
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>5.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test-mvc</artifactId>
            <version>1.0.0.M2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- HTTP Requests -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.3</version>
        </dependency>

        <!-- HTTP Mocking -->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>1.46</version>
            <scope>test</scope>
            <classifier>standalone</classifier>
        </dependency>
        
        
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
  			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
  			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
  			<version>${spring.security.version}</version>
		</dependency>

    </dependencies>
</dependencyManagement>    

    <build>
        <finalName>swarm</finalName>
        
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
            </resource>             
        </resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.1.201405082137</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.1.201405082137,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <releaseProfiles>releases</releaseProfiles>
                    <!--<tagBase>ssh://gerrit.sonrisa:29418/swarm-mobile/releases</tagBase>-->
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                   <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
                                    
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <!-- <compilerArguments> <endorseddirs>${endorsed.dir}</endorseddirs> 
                        </compilerArguments> -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.11.v20130520</version>
                <configuration>
					<war>${basedir}/swarm-gateway/target/swarm.war</war>
                    <webAppConfig>
                        <contextPath>/swarm</contextPath>
                    </webAppConfig>
                    <systemProperties>
                        <systemProperty>
                            <name>log4j.configurationFile</name>
                            <value>file:${project.basedir}/src/main/resources/log4j.properties</value>
                        </systemProperty>
                        <systemProperty>
                            <name>spring.profiles.active</name>
                            <value>${spring.profiles.active.dev}</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                        <version>${log4j.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            
            
			<!-- 
			Either eclipse fails with:
			
			Plugin execution not covered by lifecycle configuration: 
			org.jacoco:jacoco-maven-plugin:0.7.1.201405082137:prepare-agent 
			(execution: pre-test, phase: initialize)
			
			Or Jenkins fails with no org.eclipse.m2e:lifecycle-mapping. 
			
			Solution: Ignore prepare-agent goals in Eclipse.
			 -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<includes>
						<include>com.sonrisa.swarm.*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>pre-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>releases</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.2</version>
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <serverId>nexus</serverId>
                            <nexusUrl>http://nexus.sonrisa:8080/nexus/</nexusUrl>
                            <skipStaging>true</skipStaging>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

